local utils = require("tigertm.config.utils")
local plugins = {
	{
		"simrat39/rust-tools.nvim",
		ft = { "rust" },
		opts = function()
		local adapter
		local success, package = pcall(function() return require("mason-registry").get_package "codelldb" end)
		if success then
			local package_path = package:get_install_path()
			local codelldb_path = package_path .. "/codelldb"
			local liblldb_path = package_path .. "/extension/lldb/lib/liblldb"
			local this_os = vim.loop.os_uname().sysname

			-- The path in windows is different
			if this_os:find "Windows" then
				codelldb_path = package_path .. "\\extension\\adapter\\codelldb.exe"
				liblldb_path = package_path .. "\\extension\\lldb\\bin\\liblldb.dll"
			else
				-- The liblldb extension is .so for linux and .dylib for macOS
				liblldb_path = liblldb_path .. (this_os == "Linux" and ".so" or ".dylib")
			end
				adapter = require("rust-tools.dap").get_codelldb_adapter(codelldb_path, liblldb_path)
			else
				adapter = require("rust-tools.dap").get_codelldb_adapter()
			end

			return {
				server = utils.extend_tbl(utils.config("rust_analyzer"), { standalone = true, settings = { ["rust-analyzer"] = {fmtOnSave = {enable = true}, procMacro = {enable = true}, checkOnSave = { enable = true, command = "clippy", }, cargo = { buildScripts = { enable = true, }, features = "all", allFeatures = true, },} }}),
				dap = { adapter = adapter },
				hover_actions = { auto_focus = true },
			}
		end,
		dependencies = {{"jay-babu/mason-nvim-dap.nvim"}},
	},
}
-- return plugins
